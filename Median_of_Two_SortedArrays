------------------------------------Solution 1---Standard merge Algorithm-------------------------------------------
Algorithm:

1.Declare one array of size equal to the length of two sorted arrays,
3.Declare three variables which points to the starting index of the  arrays.
2.Run a while until any one of the array iterates to end.
4.if the arr1 element is less than the arr2,then copy arr1 element to the new array,Increment the indexes by 1.
5.If the arr2 element is less than arr1,then copy arr2 element to the new array,Increment the indexes by 1.
6.Step 4 and 5 will runs until the end of while loop.
7.Copy the remaining elements in the large arrray to the new array.
8.Find the median and return it.


-----------------------------Code in JAVA-------------------------------------------
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        //Declaring variables 
        int[] arr =new int[nums1.length+nums2.length];
        int i=0,j=0,k=0;

        //Standard merge algorithm
        while(i<nums1.length && j<nums2.length){
            if(nums1[i]>nums2[j]){
               arr[k]=nums2[j];
               j++;
               k++;
            }
            else{
                arr[k]=nums1[i];
                i++;
                k++;
            }
        }
       if(i<nums1.length){
           while(i<nums1.length){
               arr[k]=nums1[i];
               i++;
               k++;
           }

       }
      else if(j<nums2.length){
         while(j<nums2.length){
             arr[k]=nums2[j];
             j++;
             k++;
         }
     }

    //Finding median
    if(arr.length%2!=0){
        return arr[arr.length/2];
    }
    else{
        //Here we have to put 2.0 because it takes floor division with out it
        return (arr[(arr.length/2)-1]+arr[arr.length/2])/2.0;
    }

        
    }
}

-----------------------------------COmplexity analysis-----------------------------------------------------
Time complexity:O(m+n)
Space complexity:O(m+n)

------------------------------------Test case 1---------------------------------------------------------
Input: nums1 =[1,3]  nums2 =[2]
Output: 2.00000
Expected: 2.00000

------------------------------------Test case 2---------------------------------------------------------
Input: nums1 =[1,2]  nums2 =[3,4]
Output: 2.50000
Expected: 2.50000
